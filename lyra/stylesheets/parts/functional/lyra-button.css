@charset "UTF-8";
button:disabled { cursor: no-drop; }
button:focus { outline: solid 2px var(--c-accent); }

button {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: flex-start;
  gap: var(--m);
  margin: 0;
  padding: var(--p-large);
  overflow: hidden;
  box-sizing: border-box;

  color: var(--c-font);
  border: none;
  border-radius: var(--r);
  background-color: var(--c-button);
}

button > * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  pointer-events: none;
}

button:not(:disabled) { cursor: pointer; }

button:not(:disabled)::before {
  position: absolute;
  left: 0;
  top: 0;

  width: 100%;
  height: 100%;

  border-radius: inherit;
  background-color: var(--c-button-cover);
  opacity: 0;
  content: "";

  transition: opacity var(--t-transition) linear;
  will-change: opacity;
}

button:not(:disabled)::after {
  position: absolute;
  left: 0;
  top: 0;

  width: 50px;
  height: 100%;

  background: linear-gradient(90deg, transparent, oklch(0% 0 0 / 0.05), oklch(0% 0 0 / 0.05), transparent);
  content: "";

  transform: translateX(-50px);
  will-change: transform;
}

button:not(:disabled):hover::before,
button:not(:disabled):focus::before { opacity: 0.1; }

button:not(:disabled):hover::after,
button:not(:disabled):focus::after { animation: 4s linear 0.25s ani-button-cover-effect; }

button:not(:disabled):active::before { opacity: 0.2; }

button:disabled {
  opacity: 0.5;
  cursor: no-drop;
}

@keyframes ani-button-cover-effect {
  from { transform: translateX(-50px); }
  to { transform: translateX(calc(100vw + 100px)); }
}